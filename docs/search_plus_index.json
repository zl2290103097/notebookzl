{"./":{"url":"./","title":"Introduction","keywords":"","body":"文档说明1.目录文档说明 1.目录 2.更新日志 "},"模块/工具类/GitBook/01gitbook使用.html":{"url":"模块/工具类/GitBook/01gitbook使用.html","title":"GitBook","keywords":"","body":"插件输出PDF安装 作为前端，nodejs、npm 这些环境是必备的，所以安装 gitbook-cli 工具就是分分钟的事了。 首先，全局安装 gitbook-cli $ npm install gitbook-cli -g 创建一本书 新建一个文件夹，执行初始化命令： $ gitbook init 这个命令会生成两个模板文件，一个 README.md，这个里面会看到一行 Introduction 字样，其实就是可以理解为封皮的地方。还有一个是 SUMMARY.md,仔细看这个文件内容： # Summary * [Introduction](README.md) 其实就是目录了，如果要有二级目录可以像这样写： # Summary * [Introduction](README.md) * [二级目录](README.md) 如果想把文档都分类一下，用文件夹来分门别类，大致可以这样： # Summary * [介绍](README.md) * [后端](./backend/README.md) * [小程序接口 api](./backend/smartprograme.md) * [小程序接口 api](./backend/smartprograme.md) * [前端规范](./frontend/README.md) * [js规范](./frontend/jsStandard.md) 预览 可以在本地起个服务看看效果： $ gitbook serve $ gitbook serve ./源码的文件夹 ./编译后的文件夹 生成静态页面 $ gitbook build $ gitbook build ./源码文件夹 ./编译后的文件夹 执行之后生成的 _book 文件夹内的内容就是个静态网站内容了，直接放到服务器上就可以了，首页就是 index.html。非常之方便。 配置 在根目录下创建一个 book.json 的配置文件，就可以为你的 gitbook 添加一下插件了，可以配置主题、样式和一些格式插件，等等。 { // 样式风格配置格式 \"styles\": { \"website\": \"styles/website.css\", \"ebook\": \"styles/ebook.css\", \"pdf\": \"styles/pdf.css\", \"mobi\": \"styles/mobi.css\", \"epub\": \"styles/epub.css\" }, // 插件安装配置格式 \"plugins\": [ \"emphasize\", // 为文字加上底色 \"-highlight\", // 加了减号的表示禁用一些默认的配置，这里禁用了高亮 \"tbfed-pagefooter\" // 为页面添加页脚 ], // 插件对应的配置 \"pluginsConfig\": { \"tbfed-pagefooter\": { \"copyright\":\"Copyright\", \"modify_label\": \"该文件修订时间：\", \"modify_format\": \"YYYY-MM-DD HH:mm:ss\" } } } 添加了这些插件后要执行安装命令，这样才安装插件成功。 $ gitbook install 其他的插件可以直接上 gitbook 插件列表页面上去找一找。 Install pre-releases gitbook-cli makes it easy to download and install other versions of GitBook to test with your book: $ gitbook fetch beta Use gitbook ls-remote to list remote versions available for install. Debugging You can use the options --log=debug and --debug to get better error messages (with stack trace). For example: $ gitbook build ./ --log=debug --debug 插件 GitBook 有 插件官网，默认带有 5 个插件，highlight、search、sharing、font-settings、livereload，如果要去除自带的插件， 可以在插件名称前面加 -，比如： \"plugins\": [ \"-search\" ] 如果要配置使用的插件可以在 book.json 文件中加入即可，比如我们添加 plugin-github，我们在 book.json 中加入配置如下即可： { \"plugins\": [ \"github\" ], \"pluginsConfig\": { \"github\": { \"url\": \"https://github.com/your/repo\" } } } 然后在终端输入 gitbook install ./ 即可。 如果要指定插件的版本可以使用 plugin@0.3.1，因为一些插件可能不会随着 GitBook 版本的升级而升级。 输出PDF 输出为PDF文件，需要先安装gitbook pdf $ npm install gitbook-pdf -g 如果在安装gitbook-pdf时，觉得下载phantomjs包太慢的话，你可以到phantomjs的官方网站上去下载。 http://phantomjs.org/ 这个包的安装方式，参考其官网的说明文档。 然后，用下面的命令就可以生成PDF文件了。 $ gitbook pdf {book_name} 如果，你已经在编写的gitbook当前目录，也可以使用相对路径。 $ gitbook pdf . 然后，你就会发现，你的目录中多了一个名为book.pdf的文件。 "}}